@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthenticationStateProvider



<PageTitle>Clarity Crate</PageTitle>

<MudThemeProvider Theme="_currentTheme" />
<MudDialogProvider />
<MudSnackbarProvider />

<style>
    .nav-link.active {
        color: #6A1B9A !important;
    }
</style>



<div>

    <NavBar />



    <main class="">
        @if (isAccountManagePage)
        {
            <MudLayout>

                <MudDrawer @bind-Open="@open" Elevation="1">
                    <MudDrawerHeader>
                        <MudText Typo="Typo.h6">Account</MudText>
                    </MudDrawerHeader>
                    <MudNavMenu>
                        <MudNavLink Href="Account/Manage/Email" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Email">Email</MudNavLink>
                        <MudNavLink Href="Account/Manage/ChangePassword" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Password">Password</MudNavLink>
                        <MudNavLink Href="Account/Manage/PersonalData" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.DataObject">Personal data</MudNavLink>
                    </MudNavMenu>
                </MudDrawer>
                <MudMainContent Class="vh-100 page d-flex flex-column justify-content-between">

                    <MudContainer>
                        @Body
                    </MudContainer>

                    <MudContainer>
                        <Footer />
                    </MudContainer>

                </MudMainContent>
            </MudLayout>
        }
        else if (isLoggedIn)
        {
            <MudLayout>

                <MudDrawer @bind-Open="@_openAdminDrawer" Elevation="1">
                    <MudDrawerHeader>
                        <MudText Typo="Typo.h6">Admin Panel</MudText>
                    </MudDrawerHeader>
                    <MudNavMenu>
                        <MudNavLink Href="/terms" Match="NavLinkMatch.All">Terms</MudNavLink>
                        <MudNavLink Href="/topics" Match="NavLinkMatch.All">Topics</MudNavLink>
                        <MudNavLink Href="/subjects" Match="NavLinkMatch.All">Subjects</MudNavLink>
                        <MudNavLink Href="/curriculums" Match="NavLinkMatch.All">Curriculums</MudNavLink>
                    </MudNavMenu>
                </MudDrawer>


                <MudMainContent Class="vh-100 page d-flex flex-column justify-content-between">

                    <MudContainer>
                        @Body
                    </MudContainer>

                    <MudContainer>
                       <Footer/>
                    </MudContainer>

                </MudMainContent>
            </MudLayout>

        }
        else
        {

            <MudMainContent Class="vh-100 page d-flex flex-column justify-content-between">

                <MudContainer>
                    @Body
                </MudContainer>

                <MudContainer>
                    <Footer />
                </MudContainer>

            </MudMainContent>


        }

    </main>


</div>



@code {
    bool open = true;
    private bool _openAdminDrawer = true;

    bool isLoggedIn = false;


    DrawerClipMode clipMode = DrawerClipMode.Docked;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    //Is it an Identity page or not
    private bool isAccountManagePage => HttpContext is not null && HttpContext.Request.Path.StartsWithSegments("/Account/Manage") ? true : false;

    protected async override Task OnInitializedAsync()
    {

        //check to see f the use is logged in
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();

        var user = authState.User;

        isLoggedIn = user.Identity.IsAuthenticated;


    }

    void ToggleDrawer()
    {
        open = !open;
    }




    private readonly MudTheme _currentTheme = new()
    {
        /*
        Palette = new PaletteLight
        {

            Primary = "#007bff", // Blue
            Secondary = "#6c757d", // Gray
            Info = "#17a2b8", // Cyan
            Success = "#28a745", // Green
            Warning = "#ffc107", // Yellow
            Error = "#dc3545", // Red
            AppbarBackground = "#212121", // Dark gray
            TextPrimary = "#212529", // Dark gray
            TextSecondary = "#6c757d", // Gray
        },
            Typography = new Typography()
        {
            Default = new Default()
            {
                FontFamily = new[] { "Poppins", "Helvetica", "Arial", "sans-serif" }
            }
        }
        */
    };
}