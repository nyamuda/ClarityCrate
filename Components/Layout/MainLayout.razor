@inherits LayoutComponentBase
@inject AuthenticationStateProvider AuthenticationStateProvider
@using Clarity_Crate.Components.Pages



<PageTitle>Clarity Crate</PageTitle>

<MudThemeProvider Theme="_currentTheme" />
<MudDialogProvider />
<MudSnackbarProvider />

<style>
    .nav-link.active {
        color: #6A1B9A !important;
        font-weight:bold;
    }
</style>



<div class="page d-flex flex-column justify-content-between">



    <nav class="navbar navbar-expand-lg navbar-light bg-white">
        <div class="container-fluid">
            <a class="navbar-brand" href="#">Navbar</a>
            <MudIconButton Class="navbar-toggler" Icon="@Icons.Material.Filled.Menu" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-label="Toggle navigation" aria-controls="navbarSupportedContent" aria-expanded="false"></MudIconButton>

            <div class="collapse navbar-collapse" id="navbarSupportedContent">
                <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                    <li class="nav-item">
                        <NavLink class="nav-link" href="/" Match="NavLinkMatch.All">Home</NavLink>

                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link" href="/terms" Match="NavLinkMatch.All">Terms</NavLink>
                    </li>
                    <li class="nav-item dropdown">
                        <a class="nav-link dropdown-toggle" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                            Dropdown
                        </a>
                        <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                            <li><a class="dropdown-item" href="#">Action</a></li>
                            <li><a class="dropdown-item" href="#">Another action</a></li>
                            <li><hr class="dropdown-divider"></li>
                            <li><a class="dropdown-item" href="#">Something else here</a></li>
                        </ul>
                    </li>
                    <li class="nav-item">
                        <a class="nav-link disabled">Disabled</a>
                    </li>
                </ul>
                <LoginDisplay />
            </div>
        </div>
    </nav>

    <main class="vh-100 container">
        @Body
    </main>

    <Footer />

</div>



@code {
    bool open = false;
    bool _isExpanded = false;
    bool isLoggedIn = false;


    DrawerClipMode clipMode = DrawerClipMode.Docked;


    protected async override Task OnInitializedAsync()
    {

        //check to see f the use is logged in
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();

        var user = authState.User;

        isLoggedIn = user.Identity.IsAuthenticated;


    }

    void ToggleDrawer()
    {
        open = !open;
    }




    private readonly MudTheme _currentTheme = new()
    {
        /*
        Palette = new PaletteLight
        {

            Primary = "#007bff", // Blue
            Secondary = "#6c757d", // Gray
            Info = "#17a2b8", // Cyan
            Success = "#28a745", // Green
            Warning = "#ffc107", // Yellow
            Error = "#dc3545", // Red
            AppbarBackground = "#212121", // Dark gray
            TextPrimary = "#212529", // Dark gray
            TextSecondary = "#6c757d", // Gray
        },
            Typography = new Typography()
        {
            Default = new Default()
            {
                FontFamily = new[] { "Poppins", "Helvetica", "Arial", "sans-serif" }
            }
        }
        */
    };
}