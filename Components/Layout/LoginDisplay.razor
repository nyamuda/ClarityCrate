@implements IDisposable

@inject NavigationManager NavigationManager


<CascadingAuthenticationState>
    <AuthorizeView>
        <Authorized>
            <div class="">

                <div class="dropdown">
                    <MudChip Class="cursor-pointer" Color="Color.Dark" Icon="@Icons.Material.Filled.Person"
                             id="dropdownMenuButton1" data-bs-toggle="dropdown" aria-expanded="false">
                        Profile
                    </MudChip>

                    <ul class="dropdown-menu dropdown-menu-start dropdown-menu-lg-end px-3"
                        aria-labelledby="dropdownMenuButton1">
                        <li>
                            <MudButton Class="text-capitalize" Href="definitions/favorites" FullWidth="true" Variant="Variant.Text"
                                       Color="Color.Dark">Favorites</MudButton>
                        </li>

                        <li>
                            <MudButton Class="text-capitalize" Href="definitions/practice" FullWidth="true" Variant="Variant.Text"
                                       Color="Color.Dark">Practice</MudButton>
                        </li>

                        <li>
                            <MudButton Class="text-capitalize" Href="Account/Manage" FullWidth="true" Variant="Variant.Text"
                                       Color="Color.Dark">Account Settings</MudButton>
                        </li>
                        <form method="post" action="Account/Logout">
                            <AntiforgeryToken />
                            <input type="hidden" name="ReturnUrl" value="@currentUrl" />

                            <MudButton Class="text-capitalize" FullWidth="true" ButtonType="ButtonType.Submit" Variant="Variant.Text"
                                       Color="Color.Dark">Log out</MudButton>

                        </form>
                    </ul>
                </div>

                <!--
                                <MudMenu FullWidth="true" AnchorOrigin="Origin.BottomLeft">
                                    <ActivatorContent>
                                        <MudChip Class="login-btn" Icon="@Icons.Material.Filled.Person" Color="Color.Dark">Account</MudChip>
                                    </ActivatorContent>
                                    <ChildContent>


                                        <MudMenuItem>
                                            <MudLink Underline="Underline.None" Color="Color.Dark" Href="Account/Manage">Manage</MudLink>
                                        </MudMenuItem>
                                        <MudMenuItem>
                                            <form method="post" action="Account/Logout">
                                                <AntiforgeryToken />
                                                <input type="hidden" name="ReturnUrl" value="@currentUrl" />
                                                <button type="submit" class="">Log out</button>
                                            </form>
                                        </MudMenuItem>


                                    </ChildContent>
                                </MudMenu>
                                -->
            </div>
        </Authorized>
        <NotAuthorized>
            <MudButton Class="me-2" Href="Account/Login" Variant="Variant.Outlined">Login</MudButton>


            <MudButton Href="Account/Register" Variant="Variant.Filled" Color="Color.Dark">Sign up</MudButton>

        </NotAuthorized>
    </AuthorizeView>



</CascadingAuthenticationState>








@code {
    private string? currentUrl;



    protected override void OnInitialized()
    {
        currentUrl = NavigationManager.ToBaseRelativePath(NavigationManager.Uri);
        NavigationManager.LocationChanged += OnLocationChanged;
    }

    private void OnLocationChanged(object? sender, LocationChangedEventArgs e)
    {
        currentUrl = NavigationManager.ToBaseRelativePath(e.Location);
        StateHasChanged();
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= OnLocationChanged;
    }
}
