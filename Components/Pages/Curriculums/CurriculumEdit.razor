@inject CurriculumService CurriculumService
@using Clarity_Crate.Services
@inject NavigationManager NavigationManager
@inject AppService AppService
@using Clarity_Crate.Models
@page "/curriculums/edit/{CurriculumId:int}"


<div class="container text-start m-auto mt-16">
    <h1 class="display-6">Update curriculum</h1>
    <EditForm class="py-3 px-4 shadow" Model="@Curriculum" OnValidSubmit="@HandleValidSubmit">
        <DataAnnotationsValidator />


        <div class="mb-3">

            <MudTextField @bind-Value="Curriculum.Name" Variant="Variant.Outlined"
                          For="@(() => Curriculum.Name)"
                          Immediate="true"
                          Label="Name" />


        </div>

        <MudButton Disabled="@CurriculumService.isUpdating" Variant="Variant.Filled" DisableElevation="true" Color="Color.Dark" ButtonType="ButtonType.Submit" Size="Size.Large">
            @if (CurriculumService.isUpdating)
            {
                <MudProgressCircular Class="ms-n1 text-dark" Size="Size.Small" Indeterminate="true" />
                <MudText Class="ms-2 text-dark">Please wait...</MudText>
            }
            else
            {
                <MudText>Update</MudText>
            }
        </MudButton>
    </EditForm>
</div>



@code {

    private Curriculum? Curriculum { get; set; } = new Curriculum();
    [Parameter]
    public int CurriculumId { get; set; }


    protected override async Task OnInitializedAsync()
    {
        //get the curriculum to be edited
        Curriculum = await CurriculumService.GetCurriculum(CurriculumId);

    }


    private async Task HandleValidSubmit()
    {
        //add the new curriculum to the database
        if (Curriculum != null)
        {
            bool isSuccess = await CurriculumService.UpdateCurriculum(CurriculumId, Curriculum);

            if(isSuccess)
            {
                //show snack bar
                string message = "Curriculum updated successfully!";
                AppService.ShowSnackBar(message, isSuccess: true);
            }
            else
            {
                //show snack bar
                string message = "An error occurred while updating the curriculum";
                AppService.ShowSnackBar(message, false);
            }
        }
        //redirect to the curriculums page
        NavigationManager.NavigateTo("/curriculums");




    }
}