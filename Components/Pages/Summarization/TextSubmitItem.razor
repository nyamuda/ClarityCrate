@using Clarity_Crate.Services
@inject FileService FileService




<div class="summarization-text-submit">
    <div class="d-none d-md-block">
        <MudTextField T="string" Label="Enter your text" Variant="Variant.Text" Text="@TextToSummarize" Lines="13" />
    </div>
    <div class="d-block d-md-none">
        <MudTextField T="string" Label="Enter your text" Variant="Variant.Text" Text="@TextToSummarize" Lines="9" />
    </div>

    <!-- Slider & Bottom Buttons -->
    <MudGrid Class="mt-1">
        <MudItem xs="6">
            <MudFileUpload Context="fileInput" T="IBrowserFile" Accept=".pdf" FilesChanged="UploadFile" MaximumFileCount="100">
                <ButtonTemplate>
                    <MudButton HtmlTag="label" for="@fileInput" Class="gray darken-4" Variant="Variant.Outlined" StartIcon="@Icons.Material.Filled.Upload">
                        Upload
                    </MudButton>
                </ButtonTemplate>
            </MudFileUpload>
        </MudItem>
        <MudItem xs="6" Style="text-align: right;">
            <MudButton Class="purple darken-4 text-light" Variant="Variant.Filled">
                Summarize
            </MudButton>
        </MudItem>
    </MudGrid>
</div>


@code {
    [Parameter]
    public string TextToSummarize {get; set;} = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.";
    [Parameter]
    public string Mode { get; set; } = "paragraph";

    IBrowserFile file;


    private async Task UploadFile(IBrowserFile uploadedFile)
    {
        file = uploadedFile;

        try
        {
            // Create a memory stream and read the file asynchronously
            using (var memoryStream = new MemoryStream())
            {
                await file.OpenReadStream(maxAllowedSize: long.MaxValue).CopyToAsync(memoryStream); // 10 MB limit
                memoryStream.Position = 0; // Reset position to the beginning

                // Extract text from PDF using the memory stream
                TextToSummarize = FileService.ExtractTextFromPdf(memoryStream);
              
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred: {ex.Message}");
        }
    }



}